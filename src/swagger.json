{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "DOCK Challenge | Digital Account",
        "description": "This is a simple CRUD API application made with Express, TypeScript and documented with Swagger.",
        "contact": {
            "name": "Jonathan Moraes",
            "url": "https://moraesjon.github.io/cv-my-website/",
            "email": "eng.jonathan.moraes@gmail.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/",
            "description": ""
        }
    ],
    "tags": [
        {
            "name": "Clients",
            "description": "Dock's Clients with unique CPF"
        },
        {
            "name": "Accounts",
            "description": "Dock's Digital Accounts"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Read all records from Clients",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Creates a new Client",
                "requestBody": {
                    "description": "Client Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Client"
                            },
                            "example": {
                                "name": "Maria",
                                "cpf": 45678912345
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/clients/{cpf}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Read a specific record from Clients",
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "required": true,
                        "description": "CPF of the Client",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            },
            "delete": {
                "summary": "Deletes a Client with its CPF",
                "tags": [
                    "Clients"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "required": true,
                        "description": "CPF of the Client",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Read all records from Accounts",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Create an Account with random Agency and Account numbers",
                "requestBody": {
                    "description": "Account Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Account"
                            },
                            "example": {
                                "cpf": 45678912345,
                                "balance": 500
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            },
            "delete": {
                "summary": "Delete an Account using Agency and Account numbers",
                "tags": [
                    "Accounts"
                ],
                "requestBody": {
                    "description": "Account Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Account"
                            },
                            "example": {
                                "accountNumber": 5852,
                                "accountAgency": 487
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        },
        "/accounts/active": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Activate or inactivate an account",
                "requestBody": {
                    "description": "Account Object. Default 'active' value is true",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Account"
                            },
                            "example": {
                                "accountNumber": 2917,
                                "accountAgency": 309,
                                "active": false
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/accounts/transaction": {
            "post": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Deposit or Withdrawal money on the account",
                "requestBody": {
                    "description": "Request to 'deposit' or 'withdrawal' money from the account",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Transaction"
                            },
                            "example": {
                                "accountNumber": 2917,
                                "accountAgency": 309,
                                "amount": 50,
                                "type": "withdrawal"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/accounts/statement/{date}": {
            "get": {
                "tags": [
                    "Accounts"
                ],
                "summary": "Fetches all transactions for a given date",
                "parameters": [
                    {
                        "in": "path",
                        "name": "date",
                        "required": true,
                        "description": "Date of the statement"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Failed. Cat not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "Client": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "cpf": {
                    "type": "number"
                }
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "number"
                },
                "accountAgency": {
                    "type": "number"
                },
                "cpf": {
                    "type": "number"
                },
                "active": {
                    "type": "boolean"
                },
                "balance": {
                    "type": "number"
                }
            }
        },
        "Transactions": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "number"
                },
                "accountAgency": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "withdrawl",
                        "deposit"
                    ]
                }
            }
        }
    }
}